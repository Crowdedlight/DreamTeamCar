.include "m32def.inc"


.equ Set=0x55
.equ Get=0xAA
.equ Reply=0xBB

.equ Start=0x10
.equ Stop=0x11
.equ Register=0x12

.org 0
	jmp	Reset

.org 0x14
	jmp	Speed_Measure

.org 0x2A
Reset:

	ldi	R23, 0x00	;Målt hastighed.

	ldi	R24, 0x00	;LapCounter register.
	ldi	R25, 0x00	;Speed register .

	ldi	R28, 0x00	;Status register, 0-bit sættes høj når seriel data skal sendes.
				;1-bit sættes høj når banelængde skal sendes.
				;2-bit sættes høj når counter1 skal nulstilles.

	ldi	R29, 0x00	;Første byte seriel.
	ldi	R30, 0x00	;Anden byte seriel.
	ldi	R31, 0x00	;Tredje byte seriel.

;********************
;********************
;*  Initialisering  *
;********************
;********************

PORTB_Init:			;
	ldi	R16, 0xFF
	out	DDRB, R16

Stack_init:
	ldi	R16, HIGH(RAMEND)
	out	SPH, R16
	ldi	R16, LOW(RAMEND)
	out	SPL, R16


Timer_init0:			; CTC mode, 155 + 1 = 156 ticks !!! For præcis 10ms = 156.25 ticks
	ldi	R16, 0x9B	; 155 + 1 ticks
	out	OCR0, R16

	ldi	R16, 0b00001101	; 1024 Prescale Og CTC mode
	out	TCCR0, R16

Timer_Interrupt0:
	ldi	R16, 0b00000010
	out 	TIMSK, R16
	sei
	nop
	nop
	ldi	R16, 0x00
	out	PORTB, R16

Timer_init1:
	ldi	R16, 0b00000000
	out	TCCR1A, R16

	ldi	R16, 0b01000111
	out	TCCR1B, R16

	ldi	R16, 0x00
	out	TCNT1L, R16
	out	TCNT1H, R16

;********************
;********************
;*       Main       *
;********************
;********************
Main:					;Main loop.
	jmp	Main			;Slutningen af mainloop.

;********************
;*  Speed Measure   *
;********************
Speed_Measure:

	ldi	R18, (1<<OCF0)
	out	TIFR, R18

;	In	R16, PORTB
;	com	R16
;	out	PORTB, R16

	reti

;	in	R18, TCNT1H	;WheelSpeed MSB
;	in	R17, TCNT1L	;WheelSpeed LSB
;
;
;	mov	R22, R18	;Flyt læste værdier til at gemmes for næste udregning
;	mov	R21, R17
;
;	sub	R17, R19	;Substrat LSB
;	sbc	R18, R20	;Substrat MSB med Carry
;
;				;Hvis negativt flag er sat er udregningen forkert
;	brmi	Error_Calculation
;
;	mov	R20, R22	;Flyt de gemte værdier tilbage til korrekt register for næste udregning
;	mov	R19, R21
;
;	mov	R23, R17	;Flyt pulses/10 ms til Speed register.

;	reti

;Error_Calculation:
;	reti
